# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0256613f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#latihan tugas 3\n",
    "#belajar dengan jupyter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c93341ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25.0\n"
     ]
    }
   ],
   "source": [
    "#buat variabel alas dan tinggi dan isi nilainya\n",
    "\n",
    "alas = 10 \n",
    "tinggi = 5\n",
    "\n",
    "#rumus menghitung luas segitiga\n",
    "luas = 0.5 * alas * tinggi\n",
    "\n",
    "print (luas)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "517168e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#buat variabel atas\n",
    "#buat variabel tinggi\n",
    "#masukan ke rumus segitiga\n",
    "#cetak luas segitiga\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "824ce293",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "halo fKom UMHT\n"
     ]
    }
   ],
   "source": [
    "print (\"halo fKom UMHT\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "01145d27",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Halo fKom UMHT\n"
     ]
    }
   ],
   "source": [
    "halo = \"Halo fKom UMHT\"\n",
    "print (halo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6470ebc3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "halo, selamat pagi alkhasya\n"
     ]
    }
   ],
   "source": [
    "nama = \"alkhasya\"\n",
    "print (\"halo, selamat malam \"+ nama)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "320ff67a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "halo, Selamat malam alkhasya\n"
     ]
    }
   ],
   "source": [
    "nama = \"alkhasya\"\n",
    "print (\"halo, Selamat malam {}\".format(nama))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "545f5da0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "nilai al = 90 dan nilai fahri = 87 dan nilai amel = 70 dan nilai riki = 69\n",
      "nilai al = 90 dan nilai fahri = 87 dan nilai amel = 70 dan nilai riki = 69  \n",
      "nilai al = 90 dan nilai fahri = 87 dan nilai amel = 70 dan nilai riki = 69\n",
      "nilai al = 90 dan nilai fahri = 87 dan nilai amel = 70 dan nilai riki = 69\n"
     ]
    }
   ],
   "source": [
    "al = 90\n",
    "fahri = 87\n",
    "amel = 70\n",
    "riki = 69\n",
    "\n",
    "#print dengan metode penghubung\n",
    "print (\"nilai al = \"+ str(al) + \" dan nilai fahri = \"+str(amel) + \\\n",
    "       \" dan nilai riki = \"+str(juni)+ \" dan nilai tiki = \"+str(riki))\n",
    "\n",
    "#print dengan metode format\n",
    "print (\"nilai al = {} dan nilai fahri = {} dan nilai amel = {} dan nilai riki = {}  \" \\\n",
    "      .format (al,fahri,amel,riki))\n",
    "\n",
    "#print dengan penghubung end\n",
    "print (\"nilai al = \"+ str(al),end=\" \")\n",
    "print (\"dan nilai fahri = \"+ str(fahri),end=\" \")\n",
    "print (\"dan nilai amel = \"+ str(amel),end=\" \")\n",
    "print (\"dan nilai riki = \"+ str(riki))\n",
    "\n",
    "#print dengan f-string\n",
    "print(f\"nilai al = {al} dan nilai fahri = {fahri} dan nilai amel = {amel} dan nilai riki= {riki}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9a071c10",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e0e037a7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
